{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sumit\\\\OneDrive\\\\Desktop\\\\expense-manager-react-master\\\\src\\\\components\\\\MonthView\\\\Expense.js\";\nimport React from \"react\";\nimport ExpenseRow from \"../Common/ExpenseRow\";\nimport Loader from \"../Common/Loader\";\nimport * as utils from \"../Util\";\n\nvar Expense = function Expense(props) {\n  var expenses = props.expenses;\n  var currentUser = props.authUser;\n  var selectedMonth = props.month;\n  var selectedYear = props.year;\n\n  if (!expenses || !currentUser || !selectedMonth || !selectedYear) {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }\n\n  if (expenses && currentUser && selectedMonth && selectedYear) {\n    var eachExpense = utils.eachExpense(expenses);\n    var usersExpensesInSelectedMonthAndYear = utils.expensesinMonthAndYear(eachExpense, currentUser, selectedMonth, selectedYear);\n\n    if (usersExpensesInSelectedMonthAndYear.length) {\n      return usersExpensesInSelectedMonthAndYear.map(function (elem, i) {\n        return React.createElement(ExpenseRow, {\n          user: props.authUser,\n          expense: elem,\n          num: i,\n          key: i,\n          expenseId: usersExpensesInSelectedMonthAndYear[i].key,\n          settings: props.settings,\n          convertedCurrency: props.convertedCurrency,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        });\n      });\n    } else {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"alert alert-info\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"You have'nt spent a penny on the selected month\")));\n    }\n  }\n};\n\nexport default Expense;","map":{"version":3,"sources":["C:\\Users\\sumit\\OneDrive\\Desktop\\expense-manager-react-master\\src\\components\\MonthView\\Expense.js"],"names":["React","ExpenseRow","Loader","utils","Expense","props","expenses","currentUser","authUser","selectedMonth","month","selectedYear","year","eachExpense","usersExpensesInSelectedMonthAndYear","expensesinMonthAndYear","length","map","elem","i","key","settings","convertedCurrency"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACrB,MAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,MAAMC,WAAW,GAAGF,KAAK,CAACG,QAA1B;AACA,MAAMC,aAAa,GAAGJ,KAAK,CAACK,KAA5B;AACA,MAAMC,YAAY,GAAGN,KAAK,CAACO,IAA3B;;AAEA,MAAI,CAACN,QAAD,IAAa,CAACC,WAAd,IAA6B,CAACE,aAA9B,IAA+C,CAACE,YAApD,EAAkE;AAC9D,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAbJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAhBJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAnBJ,CADJ;AAyBH;;AAED,MAAIL,QAAQ,IAAIC,WAAZ,IAA2BE,aAA3B,IAA4CE,YAAhD,EAA8D;AAC1D,QAAME,WAAW,GAAGV,KAAK,CAACU,WAAN,CAAkBP,QAAlB,CAApB;AACA,QAAMQ,mCAAmC,GAAGX,KAAK,CAACY,sBAAN,CACxCF,WADwC,EAExCN,WAFwC,EAGxCE,aAHwC,EAIxCE,YAJwC,CAA5C;;AAOA,QAAIG,mCAAmC,CAACE,MAAxC,EAAgD;AAC5C,aAAOF,mCAAmC,CAACG,GAApC,CAAwC,UAAUC,IAAV,EAAgBC,CAAhB,EAAmB;AAC9D,eACI,oBAAC,UAAD;AACI,UAAA,IAAI,EAAEd,KAAK,CAACG,QADhB;AAEI,UAAA,OAAO,EAAEU,IAFb;AAGI,UAAA,GAAG,EAAEC,CAHT;AAII,UAAA,GAAG,EAAEA,CAJT;AAKI,UAAA,SAAS,EAAEL,mCAAmC,CAACK,CAAD,CAAnC,CAAuCC,GALtD;AAMI,UAAA,QAAQ,EAAEf,KAAK,CAACgB,QANpB;AAOI,UAAA,iBAAiB,EAAEhB,KAAK,CAACiB,iBAP7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,OAZM,CAAP;AAaH,KAdD,MAcO;AACH,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,QAAA,IAAI,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADJ,CADJ,CADJ;AASH;AACJ;AACJ,CArED;;AAuEA,eAAelB,OAAf","sourcesContent":["import React from \"react\";\nimport ExpenseRow from \"../Common/ExpenseRow\";\nimport Loader from \"../Common/Loader\";\nimport * as utils from \"../Util\";\n\nconst Expense = props => {\n    const expenses = props.expenses;\n    const currentUser = props.authUser;\n    const selectedMonth = props.month;\n    const selectedYear = props.year;\n\n    if (!expenses || !currentUser || !selectedMonth || !selectedYear) {\n        return (\n            <tr>\n                <td>\n                    <Loader />\n                </td>\n                <td>\n                    <Loader />\n                </td>\n                <td>\n                    <Loader />\n                </td>\n                <td>\n                    <Loader />\n                </td>\n                <td>\n                    <Loader />\n                </td>\n                <td>\n                    <Loader />\n                </td>\n                <td>\n                    <Loader />\n                </td>\n            </tr>\n        );\n    }\n\n    if (expenses && currentUser && selectedMonth && selectedYear) {\n        const eachExpense = utils.eachExpense(expenses);\n        const usersExpensesInSelectedMonthAndYear = utils.expensesinMonthAndYear(\n            eachExpense,\n            currentUser,\n            selectedMonth,\n            selectedYear\n        );\n\n        if (usersExpensesInSelectedMonthAndYear.length) {\n            return usersExpensesInSelectedMonthAndYear.map(function (elem, i) {\n                return (\n                    <ExpenseRow\n                        user={props.authUser}\n                        expense={elem}\n                        num={i}\n                        key={i}\n                        expenseId={usersExpensesInSelectedMonthAndYear[i].key}\n                        settings={props.settings}\n                        convertedCurrency={props.convertedCurrency}\n                    />\n                );\n            });\n        } else {\n            return (\n                <tr>\n                    <td>\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            You have'nt spent a penny on the selected month\n                        </div>\n                    </td>\n                </tr>\n            );\n        }\n    }\n};\n\nexport default Expense;\n"]},"metadata":{},"sourceType":"module"}