{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\sumit\\\\OneDrive\\\\Desktop\\\\expense-manager-react-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\sumit\\\\OneDrive\\\\Desktop\\\\expense-manager-react-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\sumit\\\\OneDrive\\\\Desktop\\\\expense-manager-react-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\sumit\\\\OneDrive\\\\Desktop\\\\expense-manager-react-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\sumit\\\\OneDrive\\\\Desktop\\\\expense-manager-react-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\sumit\\\\OneDrive\\\\Desktop\\\\expense-manager-react-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\sumit\\\\OneDrive\\\\Desktop\\\\expense-manager-react-master\\\\src\\\\components\\\\Savings\\\\AddSavingForm.js\";\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { SketchPicker } from \"react-color\";\nimport moment from \"moment\";\nimport $ from \"jquery\";\nimport Loader from \"../Common/Loader\";\nimport * as db from \"../../firebase/db\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./styles/form.css\";\n\nvar AddSavingForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddSavingForm, _Component);\n\n  function AddSavingForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddSavingForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddSavingForm).call(this, props));\n    _this.state = {\n      date: moment(),\n      day: moment().day,\n      goalAmount: \"\",\n      savingAmount: \"\",\n      savingFor: \"Food\",\n      comments: \"\",\n      goalAchieved: \"no\",\n      cardColor: \"#fff\",\n      uid: _this.props.user.uid,\n      dataSaved: false,\n      displayColorPicker: false\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handelDateChange = _this.handelDateChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleColorChange = _this.handleColorChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddSavingForm, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      db.doCreateSaving(this.state.uid, this.state.date.format(\"MM/DD/YYYY\"), this.state.goalAmount, Math.ceil(this.state.savingAmount), this.state.savingFor, this.state.comments, this.state.goalAchieved, this.state.cardColor, moment(this.state.date.format(\"MM/DD/YYYY\")).day()); // reset form once saved\n\n      this.setState({\n        date: moment(),\n        day: moment().day,\n        goalAmount: \"\",\n        savingAmount: \"\",\n        savingFor: \"Food\",\n        comments: \"\",\n        goalAchieved: \"no\",\n        cardColor: \"#fff\",\n        uid: this.props.user.uid,\n        dataSaved: true\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        displayColorPicker: !this.state.displayColorPicker\n      });\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        displayColorPicker: false\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      // If you are using babel, you can use ES 6 dictionary syntax { [e.target.name] = e.target.value }\n      var change = {};\n      change[e.target.name] = e.target.value;\n      this.setState(change);\n    }\n  }, {\n    key: \"handelDateChange\",\n    value: function handelDateChange(date) {\n      this.setState({\n        date: date\n      });\n    }\n  }, {\n    key: \"handleColorChange\",\n    value: function handleColorChange(color) {\n      this.setState({\n        cardColor: color.hex\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.settings) {\n        var inputNightMode = {\n          background: \"#2c2b2b\",\n          color: \"#a9a0a0\",\n          border: \"1px solid #9b8c8cc7\"\n        };\n        var inputDayMode = {\n          background: \"#fff\",\n          color: \"#495057\"\n        };\n        var validationBox = {\n          background: \"rgba(0,0,0,0)\",\n          color: \"#ffecb8\",\n          fontSize: \"12px\",\n          width: \"60%\",\n          position: \"absolute\",\n          bottom: \"15px\",\n          left: \"15px\"\n        };\n        var color = {\n          width: \"36px\",\n          height: \"14px\",\n          borderRadius: \"2px\",\n          background: \"\".concat(this.state.cardColor)\n        };\n        var swatch = {\n          padding: \"5px\",\n          background: \"#fff\",\n          borderRadius: \"1px\",\n          boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\n          display: \"inline-block\",\n          cursor: \"pointer\"\n        };\n        var popover = {\n          position: \"absolute\",\n          zIndex: \"2\"\n        };\n        var cover = {\n          position: \"fixed\",\n          top: \"0px\",\n          right: \"0px\",\n          bottom: \"0px\",\n          left: \"0px\"\n        };\n        return React.createElement(\"form\", {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"col-sm-3 col-xs-6 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"Target Date\")), React.createElement(\"div\", {\n          className: \"col-sm-9 col-xs-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(DatePicker, {\n          className: \"form-control date \" + (this.props.settings.mode === \"night\" ? \"inputNightMode\" : \"inputDayMode\"),\n          name: \"date\",\n          selected: this.state.date,\n          onChange: this.handelDateChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: \"\",\n          className: \"col-sm-3 col-xs-6 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, \"Card Color\")), React.createElement(\"div\", {\n          className: \"col-sm-9 col-xs-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: swatch,\n          onClick: this.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        })), this.state.displayColorPicker ? React.createElement(\"div\", {\n          style: popover,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: cover,\n          onClick: this.handleClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }), React.createElement(SketchPicker, {\n          name: \"cardColor\",\n          color: this.state.cardColor,\n          onChange: this.handleColorChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        })) : null)), React.createElement(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"col-sm-3 col-xs-6 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \"Goal Amount\")), React.createElement(\"div\", {\n          className: \"col-sm-9 col-xs-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          required: true,\n          type: \"number\",\n          name: \"goalAmount\",\n          onChange: this.handleChange.bind(this),\n          value: this.state.goalAmount,\n          style: this.props.settings.mode === \"night\" ? inputNightMode : inputDayMode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"col-sm-3 col-xs-6 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, \"Saving Amount\")), React.createElement(\"div\", {\n          className: \"col-sm-9 col-xs-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          required: true,\n          type: \"number\",\n          name: \"savingAmount\",\n          onChange: this.handleChange.bind(this),\n          value: this.state.savingAmount,\n          style: this.props.settings.mode === \"night\" ? inputNightMode : inputDayMode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"col-sm-3 col-xs-6 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \"Saving For\")), React.createElement(\"div\", {\n          className: \"col-sm-9 col-xs-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"form-control\",\n          required: true,\n          type: \"text\",\n          name: \"savingFor\",\n          onChange: this.handleChange.bind(this),\n          value: this.state.savingFor,\n          style: this.props.settings.mode === \"night\" ? inputNightMode : inputDayMode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"col-sm-3 col-xs-6 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, \"Comments\")), React.createElement(\"div\", {\n          className: \"col-sm-9 col-xs-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(\"textarea\", {\n          className: \"form-control\",\n          type: \"text\",\n          required: true,\n          name: \"comments\",\n          onChange: this.handleChange.bind(this),\n          value: this.state.comments,\n          style: this.props.settings.mode === \"night\" ? inputNightMode : inputDayMode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"form-group row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"col-sm-3 col-xs-6 col-form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, \"Goal Achieved\")), React.createElement(\"div\", {\n          className: \"col-sm-5 col-xs-6 switch-field\",\n          onChange: this.handleChange.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          name: \"goalAchieved\",\n          value: \"yes\",\n          defaultChecked: this.state.goalAchieved === \"yes\",\n          id: \"switch_left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          for: \"switch_left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, \"Achieved\"), React.createElement(\"input\", {\n          type: \"radio\",\n          name: \"goalAchieved\",\n          value: \"no\",\n          defaultChecked: this.state.goalAchieved === \"no\",\n          id: \"switch_right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          for: \"switch_right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, \"Not Yet\"), \" \")), this.state.dataSaved ? React.createElement(\"span\", {\n          className: \"bg-success success-msg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, \" Data saved successfully\") : React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }), this.state.goalAmount > 0 && this.state.date && this.state.savingFor ? React.createElement(\"button\", {\n          className: \"btn btn-primary float-right\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, \"save\") : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: validationBox,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, \" Saving : should be greater than 0 \"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, \" Target Date : should be selected \")), React.createElement(\"button\", {\n          className: \"btn btn-primary float-right\",\n          disabled: true,\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }, \"save\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return AddSavingForm;\n}(Component);\n\nexport default AddSavingForm;","map":{"version":3,"sources":["C:\\Users\\sumit\\OneDrive\\Desktop\\expense-manager-react-master\\src\\components\\Savings\\AddSavingForm.js"],"names":["React","Component","DatePicker","SketchPicker","moment","$","Loader","db","AddSavingForm","props","state","date","day","goalAmount","savingAmount","savingFor","comments","goalAchieved","cardColor","uid","user","dataSaved","displayColorPicker","handleSubmit","bind","handleChange","handelDateChange","handleColorChange","handleClick","handleClose","event","preventDefault","doCreateSaving","format","Math","ceil","setState","e","change","target","name","value","color","hex","settings","inputNightMode","background","border","inputDayMode","validationBox","fontSize","width","position","bottom","left","height","borderRadius","swatch","padding","boxShadow","display","cursor","popover","zIndex","cover","top","right","mode"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport DatePicker from \"react-datepicker\";\nimport { SketchPicker } from \"react-color\";\nimport moment from \"moment\";\nimport $ from \"jquery\";\n\nimport Loader from \"../Common/Loader\";\n\nimport * as db from \"../../firebase/db\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./styles/form.css\";\n\nclass AddSavingForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            date: moment(),\n            day: moment().day,\n            goalAmount: \"\",\n            savingAmount: \"\",\n            savingFor: \"Food\",\n            comments: \"\",\n            goalAchieved: \"no\",\n            cardColor: \"#fff\",\n            uid: this.props.user.uid,\n            dataSaved: false,\n            displayColorPicker: false\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handelDateChange = this.handelDateChange.bind(this);\n        this.handleColorChange = this.handleColorChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        db.doCreateSaving(\n            this.state.uid,\n            this.state.date.format(\"MM/DD/YYYY\"),\n            this.state.goalAmount,\n            Math.ceil(this.state.savingAmount),\n            this.state.savingFor,\n            this.state.comments,\n            this.state.goalAchieved,\n            this.state.cardColor,\n            moment(this.state.date.format(\"MM/DD/YYYY\")).day()\n        );\n        // reset form once saved\n        this.setState({\n            date: moment(),\n            day: moment().day,\n            goalAmount: \"\",\n            savingAmount: \"\",\n            savingFor: \"Food\",\n            comments: \"\",\n            goalAchieved: \"no\",\n            cardColor: \"#fff\",\n            uid: this.props.user.uid,\n            dataSaved: true\n        });\n    }\n\n    handleClick() {\n        this.setState({ displayColorPicker: !this.state.displayColorPicker });\n    }\n\n    handleClose() {\n        this.setState({ displayColorPicker: false });\n    }\n\n    handleChange(e) {\n        // If you are using babel, you can use ES 6 dictionary syntax { [e.target.name] = e.target.value }\n        var change = {};\n        change[e.target.name] = e.target.value;\n        this.setState(change);\n    }\n\n    handelDateChange(date) {\n        this.setState({\n            date: date\n        });\n    }\n\n    handleColorChange(color) {\n        this.setState({ cardColor: color.hex });\n    }\n\n    render() {\n        if (this.props.settings) {\n            const inputNightMode = {\n                background: \"#2c2b2b\",\n                color: \"#a9a0a0\",\n                border: \"1px solid #9b8c8cc7\"\n            };\n\n            const inputDayMode = { background: \"#fff\", color: \"#495057\" };\n\n            const validationBox = {\n                background: \"rgba(0,0,0,0)\",\n                color: \"#ffecb8\",\n                fontSize: \"12px\",\n                width: \"60%\",\n                position: \"absolute\",\n                bottom: \"15px\",\n                left: \"15px\"\n            };\n\n            const color = {\n                width: \"36px\",\n                height: \"14px\",\n                borderRadius: \"2px\",\n                background: `${this.state.cardColor}`\n            };\n            const swatch = {\n                padding: \"5px\",\n                background: \"#fff\",\n                borderRadius: \"1px\",\n                boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\n                display: \"inline-block\",\n                cursor: \"pointer\"\n            };\n            const popover = {\n                position: \"absolute\",\n                zIndex: \"2\"\n            };\n            const cover = {\n                position: \"fixed\",\n                top: \"0px\",\n                right: \"0px\",\n                bottom: \"0px\",\n                left: \"0px\"\n            };\n\n            return (\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-3 col-xs-6 col-form-label\">\n                            <span>Target Date</span>\n                        </label>\n                        <div className=\"col-sm-9 col-xs-6\">\n                            <DatePicker\n                                className={\n                                    \"form-control date \" +\n                                    (this.props.settings.mode === \"night\" ? \"inputNightMode\" : \"inputDayMode\")\n                                }\n                                name=\"date\"\n                                selected={this.state.date}\n                                onChange={this.handelDateChange.bind(this)}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"\" className=\"col-sm-3 col-xs-6 col-form-label\">\n                            <span>Card Color</span>\n                        </label>\n                        <div className=\"col-sm-9 col-xs-6\">\n                            {/* <SketchPicker color={this.state.cardColor} onChangeComplete={this.handleChangeComplete} /> */}\n                            <div style={swatch} onClick={this.handleClick}>\n                                <div style={color} />\n                            </div>\n                            {this.state.displayColorPicker ? (\n                                <div style={popover}>\n                                    <div style={cover} onClick={this.handleClose} />\n                                    <SketchPicker\n                                        name=\"cardColor\"\n                                        color={this.state.cardColor}\n                                        onChange={this.handleColorChange}\n                                    />\n                                </div>\n                            ) : null}\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-3 col-xs-6 col-form-label\">\n                            <span>Goal Amount</span>\n                        </label>\n                        <div className=\"col-sm-9 col-xs-6\">\n                            <input\n                                className=\"form-control\"\n                                required\n                                type=\"number\"\n                                name=\"goalAmount\"\n                                onChange={this.handleChange.bind(this)}\n                                value={this.state.goalAmount}\n                                style={this.props.settings.mode === \"night\" ? inputNightMode : inputDayMode}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-3 col-xs-6 col-form-label\">\n                            <span>Saving Amount</span>\n                        </label>\n                        <div className=\"col-sm-9 col-xs-6\">\n                            <input\n                                className=\"form-control\"\n                                required\n                                type=\"number\"\n                                name=\"savingAmount\"\n                                onChange={this.handleChange.bind(this)}\n                                value={this.state.savingAmount}\n                                style={this.props.settings.mode === \"night\" ? inputNightMode : inputDayMode}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-3 col-xs-6 col-form-label\">\n                            <span>Saving For</span>\n                        </label>\n                        <div className=\"col-sm-9 col-xs-6\">\n                            <input\n                                className=\"form-control\"\n                                required\n                                type=\"text\"\n                                name=\"savingFor\"\n                                onChange={this.handleChange.bind(this)}\n                                value={this.state.savingFor}\n                                style={this.props.settings.mode === \"night\" ? inputNightMode : inputDayMode}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-3 col-xs-6 col-form-label\">\n                            <span>Comments</span>\n                        </label>\n                        <div className=\"col-sm-9 col-xs-6\">\n                            <textarea\n                                className=\"form-control\"\n                                type=\"text\"\n                                required\n                                name=\"comments\"\n                                onChange={this.handleChange.bind(this)}\n                                value={this.state.comments}\n                                style={this.props.settings.mode === \"night\" ? inputNightMode : inputDayMode}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-3 col-xs-6 col-form-label\">\n                            <span>Goal Achieved</span>\n                        </label>\n                        <div className=\"col-sm-5 col-xs-6 switch-field\" onChange={this.handleChange.bind(this)}>\n                            <input\n                                type=\"radio\"\n                                name=\"goalAchieved\"\n                                value=\"yes\"\n                                defaultChecked={this.state.goalAchieved === \"yes\"}\n                                id=\"switch_left\"\n                            />\n                            <label for=\"switch_left\">Achieved</label>\n                            <input\n                                type=\"radio\"\n                                name=\"goalAchieved\"\n                                value=\"no\"\n                                defaultChecked={this.state.goalAchieved === \"no\"}\n                                id=\"switch_right\"\n                            />\n                            <label for=\"switch_right\">Not Yet</label>{\" \"}\n                        </div>\n                    </div>\n\n                    {this.state.dataSaved ? (\n                        <span className=\"bg-success success-msg\"> Data saved successfully</span>\n                    ) : (\n                        <span />\n                    )}\n                    {this.state.goalAmount > 0 && this.state.date && this.state.savingFor ? (\n                        <button className=\"btn btn-primary float-right\" type=\"submit\">\n                            save\n                        </button>\n                    ) : (\n                        <div>\n                            <div style={validationBox}>\n                                <div> Saving : should be greater than 0 </div>\n                                <div> Target Date : should be selected </div>\n                            </div>\n                            <button className=\"btn btn-primary float-right\" disabled type=\"submit\">\n                                save\n                            </button>\n                        </div>\n                    )}\n                </form>\n            );\n        } else {\n            return (\n                <div>\n                    <Loader />\n                </div>\n            );\n        }\n    }\n}\n\nexport default AddSavingForm;\n"]},"metadata":{},"sourceType":"module"}