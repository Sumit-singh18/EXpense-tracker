{"ast":null,"code":"import _objectSpread from \"D:\\\\itstk\\\\Downloads\\\\Compressed\\\\expense-manager-react-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\itstk\\\\Downloads\\\\Compressed\\\\expense-manager-react-master\\\\src\\\\components\\\\MonthView\\\\DailyTotalCalender.js\";\nimport React from \"react\";\nimport Loader from \"../Common/Loader\";\nimport * as utils from \"../Util\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nvar DailyTotalCalender = function DailyTotalCalender(props) {\n  var expenses = props.expenses;\n  var currentUser = props.authUser;\n  var selectedMonth = props.month;\n  var selectedYear = props.year;\n\n  if (!expenses || !currentUser || !selectedMonth || !selectedYear) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n  if (expenses && currentUser && selectedMonth && selectedYear) {\n    var eachExpense = utils.eachExpense(expenses);\n    var usersExpensesInSelectedMonthAndYear = utils.expensesinMonthAndYear(eachExpense, currentUser, selectedMonth, selectedYear);\n    var totals = {};\n    var dayStart = [];\n    var dayEnd = [];\n    var allDatesInSelectedMonth = utils.getAllTheDatesInAMonth(selectedYear, selectedMonth);\n    var TotalInThatDay = allDatesInSelectedMonth.map(function (date) {\n      var expensesOnThatDate = usersExpensesInSelectedMonthAndYear.filter(function (exp) {\n        return Number(exp.value.date === date);\n      });\n      totals[date] = expensesOnThatDate.map(function (elem) {\n        return Number(elem.value.expense);\n      }).length >= 1 ? expensesOnThatDate.map(function (elem) {\n        return Number(elem.value.expense);\n      }).reduce(function (prev, cur) {\n        return prev + cur;\n      }) : 0;\n    });\n    var today = moment().format(\"MM/DD/YYYY\");\n    var listStyleDateCells = {\n      backgroundColor: \"#333745\",\n      padding: \"1px\",\n      margin: \"0px\",\n      display: \"inline-block\",\n      width: \"14.285%\",\n      // border: \"1px solid rgba(0,0,0,0.1)\",\n      textAlign: \"center\",\n      color: \"#BEC5AD\"\n    };\n\n    var listStyleToday = _objectSpread({}, listStyleDateCells, {\n      backgroundColor: \"#519872\",\n      color: \"#BEC5AD\"\n    });\n\n    var listStyleDayHeaders = _objectSpread({}, listStyleDateCells, {\n      fontSize: \"18px\",\n      border: \"1px solid #333745\",\n      color: \"#F7A278\"\n    });\n\n    var ulStyleCalenderCells = {\n      padding: \"0px\",\n      borderRadius: \"4px\"\n    };\n\n    var ulStyleDayHeaders = _objectSpread({}, ulStyleCalenderCells, {\n      marginBottom: \"0px\"\n    });\n\n    var dateArea = {\n      background: \"rgba(0,0,0,0.05)\",\n      color: \"#519872\",\n      letterSpacing: \"2px\",\n      fontSize: \"20px\"\n    };\n    var todayDateArea = {\n      background: \"#519872\",\n      color: \"white\",\n      letterSpacing: \"2px\",\n      fontSize: \"20px\"\n    };\n    var previDays = [];\n    var nextiDays = [];\n\n    for (var i = 0; i < moment(allDatesInSelectedMonth[0]).day(); i++) {\n      previDays.push(moment(allDatesInSelectedMonth[0]).subtract(i + 1, 'd').format(\"MM/DD/YYYY\"));\n      dayStart.push(i);\n    }\n\n    console.log(\"%c day start \", \"background: red; color: white\", previDays);\n\n    for (var _i = 0; _i < Math.abs(moment(allDatesInSelectedMonth[allDatesInSelectedMonth.length - 1]).day() - 6); _i++) {\n      nextiDays.push(moment(allDatesInSelectedMonth[allDatesInSelectedMonth.length - 1]).add(_i + 1, 'd').format(\"MM/DD/YYYY\"));\n      dayEnd.push(_i);\n    }\n\n    console.log(\"%c day end \", \"background: blue; color: white\", nextiDays);\n    console.log(dayStart, dayEnd);\n    var daysStartGapHtml = dayStart.map(function (elem) {\n      return React.createElement(\"li\", {\n        key: elem,\n        style: listStyleDateCells,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: dateArea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \" \", \"\\xA0 \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), \" \"), \"\\xA0\", \" \");\n    });\n    var daysEndGapHtml = dayEnd.map(function (elem) {\n      return React.createElement(\"li\", {\n        key: elem + 55,\n        style: listStyleDateCells,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: dateArea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \" \", \"\\xA0 \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), \" \"), \"\\xA0\", \" \");\n    });\n    var printHtml = Object.keys(totals).map(function (elem, i) {\n      var listEle = React.createElement(\"li\", {\n        key: i,\n        style: elem === today ? listStyleToday : listStyleDateCells,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: elem === today ? todayDateArea : dateArea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \" \", moment(allDatesInSelectedMonth[i]).date()), \" \", totals[elem].toString().replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\"), \" \"); // Links to daily view if total is not 0\n\n      if (totals[elem] != 0) {\n        return React.createElement(Link, {\n          to: \"/daily-view?date=\".concat(elem),\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, listEle);\n      } else {\n        return listEle;\n      }\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      style: ulStyleDayHeaders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      key: \"Sun\",\n      style: listStyleDayHeaders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Sun\"), React.createElement(\"li\", {\n      key: \"Mon\",\n      style: listStyleDayHeaders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Mon\"), React.createElement(\"li\", {\n      key: \"Tue\",\n      style: listStyleDayHeaders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Tue\"), React.createElement(\"li\", {\n      key: \"Wed\",\n      style: listStyleDayHeaders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Wed\"), React.createElement(\"li\", {\n      key: \"Thu\",\n      style: listStyleDayHeaders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Thu\"), React.createElement(\"li\", {\n      key: \"Fri\",\n      style: listStyleDayHeaders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Fri\"), React.createElement(\"li\", {\n      key: \"Sat\",\n      style: listStyleDayHeaders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Sat\")), React.createElement(\"ul\", {\n      style: ulStyleCalenderCells,\n      className: \"mobileNoPadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, daysStartGapHtml, printHtml, daysEndGapHtml));\n  }\n};\n\nexport default DailyTotalCalender;","map":{"version":3,"sources":["D:\\itstk\\Downloads\\Compressed\\expense-manager-react-master\\src\\components\\MonthView\\DailyTotalCalender.js"],"names":["React","Loader","utils","moment","Link","DailyTotalCalender","props","expenses","currentUser","authUser","selectedMonth","month","selectedYear","year","eachExpense","usersExpensesInSelectedMonthAndYear","expensesinMonthAndYear","totals","dayStart","dayEnd","allDatesInSelectedMonth","getAllTheDatesInAMonth","TotalInThatDay","map","date","expensesOnThatDate","filter","exp","Number","value","elem","expense","length","reduce","prev","cur","today","format","listStyleDateCells","backgroundColor","padding","margin","display","width","textAlign","color","listStyleToday","listStyleDayHeaders","fontSize","border","ulStyleCalenderCells","borderRadius","ulStyleDayHeaders","marginBottom","dateArea","background","letterSpacing","todayDateArea","previDays","nextiDays","i","day","push","subtract","console","log","Math","abs","add","daysStartGapHtml","daysEndGapHtml","printHtml","Object","keys","listEle","toString","replace"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Loader from \"../Common/Loader\";\nimport * as utils from \"../Util\";\nimport moment from \"moment\";\n\nimport { Link } from \"react-router-dom\";\n\nconst DailyTotalCalender = props => {\n    const expenses = props.expenses;\n    const currentUser = props.authUser;\n    const selectedMonth = props.month;\n    const selectedYear = props.year;\n\n    if (!expenses || !currentUser || !selectedMonth || !selectedYear) {\n        return (\n            <div>\n                <Loader />\n            </div>\n        );\n    }\n\n    if (expenses && currentUser && selectedMonth && selectedYear) {\n        const eachExpense = utils.eachExpense(expenses);\n        const usersExpensesInSelectedMonthAndYear = utils.expensesinMonthAndYear(\n            eachExpense,\n            currentUser,\n            selectedMonth,\n            selectedYear\n        );\n\n        let totals = {};\n        let dayStart = [];\n        let dayEnd = [];\n\n        const allDatesInSelectedMonth = utils.getAllTheDatesInAMonth(selectedYear, selectedMonth);\n        const TotalInThatDay = allDatesInSelectedMonth.map(date => {\n            let expensesOnThatDate = usersExpensesInSelectedMonthAndYear.filter(exp => Number(exp.value.date === date));\n            totals[date] =\n                expensesOnThatDate.map(elem => Number(elem.value.expense)).length >= 1\n                    ? expensesOnThatDate.map(elem => Number(elem.value.expense)).reduce((prev, cur) => prev + cur)\n                    : 0;\n        });\n\n        const today = moment().format(\"MM/DD/YYYY\");\n\n        const listStyleDateCells = {\n            backgroundColor: \"#333745\",\n            padding: \"1px\",\n            margin: \"0px\",\n            display: \"inline-block\",\n            width: \"14.285%\",\n            // border: \"1px solid rgba(0,0,0,0.1)\",\n            textAlign: \"center\",\n            color: \"#BEC5AD\"\n        };\n\n        const listStyleToday = { ...listStyleDateCells, backgroundColor: \"#519872\", color: \"#BEC5AD\" };\n\n        const listStyleDayHeaders = {\n            ...listStyleDateCells,\n            fontSize: \"18px\",\n            border: \"1px solid #333745\",\n            color: \"#F7A278\"\n        };\n\n        const ulStyleCalenderCells = {\n            padding: \"0px\",\n            borderRadius: \"4px\"\n        };\n\n        const ulStyleDayHeaders = {\n            ...ulStyleCalenderCells,\n            marginBottom: \"0px\"\n        };\n\n        const dateArea = { background: \"rgba(0,0,0,0.05)\", color: \"#519872\", letterSpacing: \"2px\", fontSize: \"20px\" };\n\n        const todayDateArea = { background: \"#519872\", color: \"white\", letterSpacing: \"2px\", fontSize: \"20px\" };\n        let previDays = [];\n        let nextiDays = [];\n        for (let i = 0; i < moment(allDatesInSelectedMonth[0]).day(); i++) {\n            previDays.push(moment(allDatesInSelectedMonth[0]).subtract(i + 1, 'd').format(\"MM/DD/YYYY\"))\n            dayStart.push(i);\n        }\n        console.log(\"%c day start \", \"background: red; color: white\", previDays)\n\n\n        for (\n            let i = 0;\n            i < Math.abs(moment(allDatesInSelectedMonth[allDatesInSelectedMonth.length - 1]).day() - 6);\n            i++\n        ) {\n            nextiDays.push(moment(allDatesInSelectedMonth[allDatesInSelectedMonth.length - 1]).add(i + 1, 'd').format(\"MM/DD/YYYY\"))\n            dayEnd.push(i);\n        }\n\n        console.log(\"%c day end \", \"background: blue; color: white\", nextiDays)\n\n\n        console.log(dayStart, dayEnd)\n\n\n        let daysStartGapHtml = dayStart.map(function (elem) {\n            return (\n                <li key={elem} style={listStyleDateCells}>\n                    <div style={dateArea}>\n                        {\" \"}\n                        &nbsp; <br />{\" \"}\n                    </div>\n                    &nbsp;{\" \"}\n                </li>\n            );\n        });\n\n        let daysEndGapHtml = dayEnd.map(function (elem) {\n            return (\n                <li key={elem + 55} style={listStyleDateCells}>\n                    <div style={dateArea}>\n                        {\" \"}\n                        &nbsp; <br />{\" \"}\n                    </div>\n                    &nbsp;{\" \"}\n                </li>\n            );\n        });\n\n        let printHtml = Object.keys(totals).map((elem, i) => {\n            var listEle = (\n                <li key={i} style={elem === today ? listStyleToday : listStyleDateCells}>\n                    <div style={elem === today ? todayDateArea : dateArea}>\n                        {\" \"}\n                        {moment(allDatesInSelectedMonth[i]).date()}\n                    </div>{\" \"}\n                    {totals[elem].toString().replace(/(\\d)(?=(\\d\\d)+\\d$)/g, \"$1,\")}{\" \"}\n                </li>\n            );\n\n            // Links to daily view if total is not 0\n            if (totals[elem] != 0) {\n                return <Link to={`/daily-view?date=${elem}`} key={i}>{listEle}</Link>;\n            } else {\n                return listEle;\n            }\n        });\n\n        return (\n            <div>\n                <ul style={ulStyleDayHeaders}>\n                    <li key=\"Sun\" style={listStyleDayHeaders}>\n                        Sun\n                    </li>\n                    <li key=\"Mon\" style={listStyleDayHeaders}>\n                        Mon\n                    </li>\n                    <li key=\"Tue\" style={listStyleDayHeaders}>\n                        Tue\n                    </li>\n                    <li key=\"Wed\" style={listStyleDayHeaders}>\n                        Wed\n                    </li>\n                    <li key=\"Thu\" style={listStyleDayHeaders}>\n                        Thu\n                    </li>\n                    <li key=\"Fri\" style={listStyleDayHeaders}>\n                        Fri\n                    </li>\n                    <li key=\"Sat\" style={listStyleDayHeaders}>\n                        Sat\n                    </li>\n                </ul>\n                <ul style={ulStyleCalenderCells} className=\"mobileNoPadding\">\n                    {daysStartGapHtml}\n                    {printHtml}\n                    {daysEndGapHtml}\n                </ul>\n            </div>\n        );\n    }\n};\n\nexport default DailyTotalCalender;\n"]},"metadata":{},"sourceType":"module"}