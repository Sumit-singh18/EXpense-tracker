{"ast":null,"code":"import _objectSpread from \"D:\\\\itstk\\\\Downloads\\\\Compressed\\\\expense-manager-react-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\itstk\\\\Downloads\\\\Compressed\\\\expense-manager-react-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\itstk\\\\Downloads\\\\Compressed\\\\expense-manager-react-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\itstk\\\\Downloads\\\\Compressed\\\\expense-manager-react-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\itstk\\\\Downloads\\\\Compressed\\\\expense-manager-react-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\itstk\\\\Downloads\\\\Compressed\\\\expense-manager-react-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\itstk\\\\Downloads\\\\Compressed\\\\expense-manager-react-master\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { firebase } from \"../firebase/index\";\nimport { defaults } from \"react-chartjs-2\";\nimport Trianglify from \"trianglify\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../assets/css/index.css\";\nimport \"../assets/css/signin.css\";\nimport Navigation from \"./Navigation/index\"; //import LandingPage from \"./Landing/index\";\n\nimport SignUpPage from \"./signUp/index\";\nimport SignInPage from \"./signIn/index\";\nimport ShopPage from \"./Shop/index\";\nimport PasswordForgetPage from \"./forgotPassword/index\";\nimport HomePage from \"./Home/index\";\nimport UpdatePassword from \"./Settings/UpdatePassword\";\nimport MonthViewPage from \"./MonthView/index\";\nimport DailyViewPage from \"./DailyView/index\";\nimport FilterViewPage from \"./FilterView/index\";\nimport UserVerification from \"./UserVerification/index\";\nimport StatisticsPage from \"./Statistics/index\";\nimport LoanPage from \"./Loan/index\";\nimport SettingsPage from \"./Settings/index\";\nimport SavingsPage from \"./Savings/index\";\nimport ErrorPage from \"./Error/index\";\nimport * as routes from \"../constants/routes\";\nimport * as db from \"../firebase/db\";\nimport * as utils from \"./Util\";\nimport * as analytics from \"./../analytics/analytics\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      authUser: null,\n      users: null,\n      expenses: null,\n      loans: null,\n      defaultCategoriesNames: null,\n      defaultCategoriesColors: null,\n      settings: null,\n      savings: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      document.title = \"Expense Manager\";\n      analytics.initGA();\n      analytics.logPageView();\n      firebase.auth.onAuthStateChanged(function (authUser) {\n        authUser ? _this2.setState({\n          authUser: authUser\n        }) : _this2.setState({\n          authUser: null\n        });\n\n        if (_this2.state.authUser) {\n          // get all the users in the db\n          db.onceGetUsers().then(function (snapshot) {\n            _this2.setState({\n              users: snapshot.val()\n            });\n          }); // get and set expenses in db\n          //  firebase.db\n          //      .ref(\"expenses\")\n          //      .on(\"value\", data => {\n          //          if (data) {\n          //              this.setState({\n          //                  expenses: data.val()\n          //              });\n          //          }\n          //      });\n          // get all the settings\n\n          firebase.db.ref(\"settings/\".concat(_this2.state.authUser.uid)).on(\"value\", function (data) {\n            console.log(\"DATA :\", data);\n            var defaultCategories = {\n              \"Food\": \"\",\n              \"Automobile\": \"\",\n              \"Entertainment\": \"\",\n              \"Clothing\": \"\",\n              \"Healthcare\": \"\",\n              \"Travel\": \"\",\n              \"Shopping\": \"\",\n              \"Personal Care\": \"\",\n              \"Investment\": \"\",\n              \"Gifts & Donations\": \"\",\n              \"Bills & Utilities\": \"\",\n              \"Others\": \"\"\n            };\n\n            if (data.val() !== null) {\n              _this2.setState({\n                settings: data.val()\n              });\n\n              if (!data.val().editedCategories) {\n                db.doCreateSettingsForUser(_this2.state.authUser.uid, data.val().font, data.val().mode, data.val().currency, data.val().travelMode, data.val().fromCurrency, data.val().monthLimit, defaultCategories);\n              }\n\n              if (_this2.state.settings) {\n                //setting the font family to chart.js\n                defaults.global.defaultFontFamily = _this2.state.settings.font || \"sans-serif\";\n              }\n            } else {\n              db.doCreateSettingsForUser(_this2.state.authUser.uid, \"sans-serif\", \"night\", \"Indian Rupees\", \"off\", \"Indian Rupees\", 15000, defaultCategories);\n            }\n          }); // get all the expenses from new table\n\n          firebase.db.ref(\"expenseTable/\".concat(_this2.state.authUser.uid)).on(\"value\", function (data) {\n            if (data.val() !== null) {\n              _this2.setState({\n                expenses: data.val()\n              });\n            } else {\n              // get and set expenses in db from old expenses table to new expenseTable\n              firebase.db.ref(\"expenses\").on(\"value\", function (data) {\n                if (data.val() !== null) {\n                  var eachExpense = utils.eachExpense(data.val());\n                  var thisUsersExpenses = utils.currentUsersExpenses(eachExpense, _this2.state.authUser);\n                  thisUsersExpenses.map(function (elem) {\n                    db.doCreateExpenseTable(elem.value.uid, elem.value.date, elem.value.expense, elem.value.category, elem.value.comments, elem.value.day, elem.key);\n                  });\n                  thisUsersExpenses.map(function (elem) {\n                    firebase.db.ref(\"expenses/\".concat(elem.key)).remove();\n                  }); // need to set empty state once deleting all records in legacy table\n                  // or else it will always be loading\n\n                  _this2.setState({\n                    expenses: data.val()\n                  });\n                }\n              });\n            }\n          }); // get all the savings from new table\n\n          firebase.db.ref(\"savingsTable/\".concat(_this2.state.authUser.uid)).on(\"value\", function (data) {\n            if (data.val() !== null) {\n              _this2.setState({\n                savings: data.val()\n              });\n            } else {\n              _this2.setState({\n                savings: data.val()\n              });\n            }\n          }); // get all the defaultCategories\n\n          firebase.db.ref(\"defaultCategories\").on(\"value\", function (data) {\n            if (data.val() !== null) {\n              _this2.setState({\n                defaultCategoriesNames: Object.keys(data.val()),\n                defaultCategoriesColors: Object.values(data.val())\n              });\n            }\n          }); // // get all the loan details\n          // firebase.db.ref(\"loans\").on(\"value\", data => {\n          //     if (data) {\n          //         this.setState({\n          //             loans: data.val()\n          //         });\n          //     }\n          // });\n          // get all the expenses from new table\n\n          firebase.db.ref(\"loanTable/\".concat(_this2.state.authUser.uid)).on(\"value\", function (data) {\n            if (data.val() !== null) {\n              _this2.setState({\n                loans: data.val()\n              });\n            } else {\n              // get and set expenses in db from old expenses table to new expenseTable\n              firebase.db.ref(\"loans\").on(\"value\", function (data) {\n                if (data.val() !== null) {\n                  var eachExpense = utils.eachExpense(data.val());\n                  var thisUsersLoans = utils.currentUsersExpenses(eachExpense, _this2.state.authUser);\n                  thisUsersLoans.map(function (elem) {\n                    db.doCreateLoanTable(elem.value.uid, elem.value.date, elem.value.amount, elem.value.loanType, elem.value.reason, elem.value.person, elem.value.day, elem.value.status, elem.key);\n                  });\n                  thisUsersLoans.map(function (elem) {\n                    firebase.db.ref(\"loans/\".concat(elem.key)).remove();\n                  }); // need to set empty state once deleting all records in legacy table\n                  // or else it will always be loading\n\n                  _this2.setState({\n                    loans: data.val()\n                  });\n                }\n              });\n            }\n          });\n          var expensesRef = firebase.db.ref(\"expenseTable/\".concat(_this2.state.authUser.uid));\n          expensesRef.on(\"child_removed\", function (data) {\n            firebase.db.ref(\"expenseTable/\".concat(_this2.state.authUser.uid)).on(\"value\", function (data) {\n              if (data) {\n                _this2.setState({\n                  expenses: data.val()\n                });\n              }\n            });\n          });\n          var loansRef = firebase.db.ref(\"loanTable/\".concat(_this2.state.authUser.uid));\n          loansRef.on(\"child_removed\", function (data) {\n            firebase.db.ref(\"loanTable/\".concat(_this2.state.authUser.uid)).on(\"value\", function (data) {\n              if (data) {\n                _this2.setState({\n                  loans: data.val()\n                });\n              }\n            });\n          });\n        } // return authUser ? this.setState(() => { authUser: authUser}) : this.setState(() => ({authUser: null}))\n\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var bodyStyle = {\n        backgroundColor: this.state.settings ? this.state.settings.mode === \"night\" ? \"#484842 !important\" : \"auto\" : \"auto\",\n        height: \"100vh\"\n      };\n      var patternconfig = {\n        height: 300,\n        width: 500,\n        cell_size: 35\n      }; // palette: Trianglify.colorbrewer,\n\n      var pattern = Trianglify(_objectSpread({}, patternconfig));\n      var pattern2 = Trianglify(_objectSpread({}, patternconfig));\n      var pattern3 = Trianglify(_objectSpread({}, patternconfig));\n      var pattern4 = Trianglify(_objectSpread({}, patternconfig));\n      var pattern5 = Trianglify(_objectSpread({}, patternconfig));\n      var pattern6 = Trianglify(_objectSpread({}, patternconfig));\n      var pattern7 = Trianglify(_objectSpread({}, patternconfig));\n      var pattern8 = Trianglify(_objectSpread({}, patternconfig));\n      var cards = {\n        card8: {\n          backgroundImage: \"url(\".concat(pattern8.png(), \")\")\n        },\n        card7: {\n          backgroundImage: \"url(\".concat(pattern7.png(), \")\")\n        },\n        card6: {\n          backgroundImage: \"url(\".concat(pattern6.png(), \")\")\n        },\n        card5: {\n          backgroundImage: \"url(\".concat(pattern5.png(), \")\")\n        },\n        card4: {\n          backgroundImage: \"url(\".concat(pattern4.png(), \")\")\n        },\n        card3: {\n          backgroundImage: \"url(\".concat(pattern3.png(), \")\")\n        },\n        card2: {\n          backgroundImage: \"url(\".concat(pattern2.png(), \")\")\n        },\n        card1: {\n          backgroundImage: \"url(\".concat(pattern.png(), \")\")\n        }\n      };\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: bodyStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        authUser: this.state.authUser,\n        settings: this.state.settings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: routes.SIGN_UP,\n        component: function component() {\n          return React.createElement(SignUpPage, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: routes.SIGN_IN,\n        component: function component() {\n          return React.createElement(SignInPage, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 316\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: routes.SHOP,\n        component: function component() {\n          return React.createElement(ShopPage, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 317\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: routes.PASSWORD_FORGET,\n        component: function component() {\n          return React.createElement(PasswordForgetPage, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 319\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: routes.UPDATE_PASSWORD,\n        component: function component() {\n          return React.createElement(UpdatePassword, {\n            user: _this3.state.authUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 323\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: routes.USER_VERIFICATION,\n        component: function component() {\n          return React.createElement(UserVerification, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: routes.HOME,\n        component: function component() {\n          return React.createElement(HomePage, {\n            user: _this3.state.authUser,\n            expenses: _this3.state.expenses,\n            settings: _this3.state.settings,\n            cards: cards,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 330\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: routes.MONTH_VIEW,\n        component: function component() {\n          return React.createElement(MonthViewPage, {\n            user: _this3.state.authUser,\n            expenses: _this3.state.expenses,\n            settings: _this3.state.settings,\n            cards: cards,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 342\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: routes.DAILY_VIEW,\n        component: function component() {\n          return React.createElement(DailyViewPage, {\n            user: _this3.state.authUser,\n            expenses: _this3.state.expenses,\n            settings: _this3.state.settings,\n            cards: cards,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 355\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: routes.FILTER_VIEW,\n        component: function component() {\n          return React.createElement(FilterViewPage, {\n            user: _this3.state.authUser,\n            expenses: _this3.state.expenses,\n            settings: _this3.state.settings,\n            cards: cards,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 368\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: routes.STATISTICS_VIEW,\n        component: function component() {\n          return React.createElement(StatisticsPage, {\n            user: _this3.state.authUser,\n            expenses: _this3.state.expenses,\n            settings: _this3.state.settings,\n            cards: cards,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 380\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: routes.LOAN_VIEW,\n        component: function component() {\n          return React.createElement(LoanPage, {\n            user: _this3.state.authUser,\n            loans: _this3.state.loans,\n            settings: _this3.state.settings,\n            cards: cards,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 392\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: routes.SETTINGS_VIEW,\n        component: function component() {\n          return React.createElement(SettingsPage, {\n            user: _this3.state.authUser,\n            settings: _this3.state.settings,\n            cards: cards,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 405\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: routes.SAVINGS_VIEW,\n        component: function component() {\n          return React.createElement(SavingsPage, {\n            user: _this3.state.authUser,\n            savings: _this3.state.savings,\n            settings: _this3.state.settings,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 413\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: function component() {\n          return React.createElement(ErrorPage, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 423\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\itstk\\Downloads\\Compressed\\expense-manager-react-master\\src\\components\\App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","firebase","defaults","Trianglify","Navigation","SignUpPage","SignInPage","ShopPage","PasswordForgetPage","HomePage","UpdatePassword","MonthViewPage","DailyViewPage","FilterViewPage","UserVerification","StatisticsPage","LoanPage","SettingsPage","SavingsPage","ErrorPage","routes","db","utils","analytics","App","props","state","authUser","users","expenses","loans","defaultCategoriesNames","defaultCategoriesColors","settings","savings","document","title","initGA","logPageView","auth","onAuthStateChanged","setState","onceGetUsers","then","snapshot","val","ref","uid","on","data","console","log","defaultCategories","editedCategories","doCreateSettingsForUser","font","mode","currency","travelMode","fromCurrency","monthLimit","global","defaultFontFamily","eachExpense","thisUsersExpenses","currentUsersExpenses","map","elem","doCreateExpenseTable","value","date","expense","category","comments","day","key","remove","Object","keys","values","thisUsersLoans","doCreateLoanTable","amount","loanType","reason","person","status","expensesRef","loansRef","bodyStyle","backgroundColor","height","patternconfig","width","cell_size","pattern","pattern2","pattern3","pattern4","pattern5","pattern6","pattern7","pattern8","cards","card8","backgroundImage","png","card7","card6","card5","card4","card3","card2","card1","SIGN_UP","SIGN_IN","SHOP","PASSWORD_FORGET","UPDATE_PASSWORD","USER_VERIFICATION","HOME","MONTH_VIEW","DAILY_VIEW","FILTER_VIEW","STATISTICS_VIEW","LOAN_VIEW","SETTINGS_VIEW","SAVINGS_VIEW"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch , Route } from \"react-router-dom\";\nimport { firebase } from \"../firebase/index\";\nimport { defaults } from \"react-chartjs-2\";\nimport Trianglify from \"trianglify\";\n\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../assets/css/index.css\";\nimport \"../assets/css/signin.css\";\n\nimport Navigation from \"./Navigation/index\";\n//import LandingPage from \"./Landing/index\";\nimport SignUpPage from \"./signUp/index\";\nimport SignInPage from \"./signIn/index\";\nimport ShopPage from \"./Shop/index\";\nimport PasswordForgetPage from \"./forgotPassword/index\";\nimport HomePage from \"./Home/index\";\nimport UpdatePassword from \"./Settings/UpdatePassword\";\nimport MonthViewPage from \"./MonthView/index\";\nimport DailyViewPage from \"./DailyView/index\";\nimport FilterViewPage from \"./FilterView/index\";\nimport UserVerification from \"./UserVerification/index\";\nimport StatisticsPage from \"./Statistics/index\";\nimport LoanPage from \"./Loan/index\";\nimport SettingsPage from \"./Settings/index\";\nimport SavingsPage from \"./Savings/index\";\nimport ErrorPage from \"./Error/index\";\n\nimport * as routes from \"../constants/routes\";\nimport * as db from \"../firebase/db\";\nimport * as utils from \"./Util\";\nimport * as analytics from \"./../analytics/analytics\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authUser: null,\n            users: null,\n            expenses: null,\n            loans: null,\n            defaultCategoriesNames: null,\n            defaultCategoriesColors: null,\n            settings: null,\n            savings: null\n        };\n    }\n\n    componentDidMount() {\n        document.title = \"Expense Manager\";\n\n        analytics.initGA();\n        analytics.logPageView();\n\n        firebase.auth.onAuthStateChanged(authUser => {\n            authUser\n                ? this.setState({\n                    authUser: authUser\n                })\n                : this.setState({\n                    authUser: null\n                });\n\n            if (this.state.authUser) {\n                // get all the users in the db\n                db.onceGetUsers().then(snapshot => {\n                    this.setState({\n                        users: snapshot.val()\n                    });\n                });\n\n                // get and set expenses in db\n                //  firebase.db\n                //      .ref(\"expenses\")\n                //      .on(\"value\", data => {\n                //          if (data) {\n                //              this.setState({\n                //                  expenses: data.val()\n                //              });\n                //          }\n                //      });\n\n                // get all the settings\n                firebase.db.ref(`settings/${this.state.authUser.uid}`).on(\"value\", data => {\n                    console.log(\"DATA :\", data)\n\n                    const defaultCategories = {\n                        \"Food\": \"\",\n                        \"Automobile\": \"\",\n                        \"Entertainment\": \"\",\n                        \"Clothing\": \"\",\n                        \"Healthcare\": \"\",\n                        \"Travel\": \"\",\n                        \"Shopping\":\"\",\n                        \"Personal Care\": \"\",\n                        \"Investment\": \"\",\n                        \"Gifts & Donations\": \"\",\n                        \"Bills & Utilities\": \"\",\n                        \"Others\": \"\"\n                    }\n\n                    if (data.val() !== null) {\n                        this.setState({\n                            settings: data.val()\n                        });\n\n                        if(!data.val().editedCategories) {\n                            \n\n                            db.doCreateSettingsForUser(\n                                this.state.authUser.uid,\n                                data.val().font,\n                                data.val().mode,\n                                data.val().currency,\n                                data.val().travelMode,\n                                data.val().fromCurrency,\n                                data.val().monthLimit,\n                                defaultCategories\n                            );\n                        }\n\n                        if (this.state.settings) {\n                            //setting the font family to chart.js\n                            defaults.global.defaultFontFamily = this.state.settings.font || \"sans-serif\";\n                        }\n                    } else {\n                        db.doCreateSettingsForUser(\n                            this.state.authUser.uid,\n                            \"sans-serif\",\n                            \"night\",\n                            \"Indian Rupees\",\n                            \"off\",\n                            \"Indian Rupees\",\n                            15000,\n                            defaultCategories\n                        );\n                    }\n                });\n\n                // get all the expenses from new table\n                firebase.db.ref(`expenseTable/${this.state.authUser.uid}`).on(\"value\", data => {\n                    if (data.val() !== null) {\n                        this.setState({\n                            expenses: data.val()\n                        });\n                    } else {\n                        // get and set expenses in db from old expenses table to new expenseTable\n                        firebase.db.ref(\"expenses\").on(\"value\", data => {\n                            if (data.val() !== null) {\n                                const eachExpense = utils.eachExpense(data.val());\n                                const thisUsersExpenses = utils.currentUsersExpenses(eachExpense, this.state.authUser);\n\n                                thisUsersExpenses.map(elem => {\n                                    db.doCreateExpenseTable(\n                                        elem.value.uid,\n                                        elem.value.date,\n                                        elem.value.expense,\n                                        elem.value.category,\n                                        elem.value.comments,\n                                        elem.value.day,\n                                        elem.key\n                                    );\n                                });\n                                thisUsersExpenses.map(elem => {\n                                    firebase.db.ref(`expenses/${elem.key}`).remove();\n                                });\n\n                                // need to set empty state once deleting all records in legacy table\n                                // or else it will always be loading\n\n                                this.setState({\n                                    expenses: data.val()\n                                });\n                            }\n                        });\n                    }\n                });\n\n                // get all the savings from new table\n                firebase.db.ref(`savingsTable/${this.state.authUser.uid}`).on(\"value\", data => {\n                    if (data.val() !== null) {\n                        this.setState({ savings: data.val() });\n                    } else {\n                        this.setState({ savings: data.val() });\n                    }\n                });\n\n                // get all the defaultCategories\n                firebase.db.ref(\"defaultCategories\").on(\"value\", data => {\n                    if (data.val() !== null) {\n                        this.setState({\n                            defaultCategoriesNames: Object.keys(data.val()),\n                            defaultCategoriesColors: Object.values(data.val())\n                        });\n                    }\n                });\n\n                // // get all the loan details\n                // firebase.db.ref(\"loans\").on(\"value\", data => {\n                //     if (data) {\n                //         this.setState({\n                //             loans: data.val()\n                //         });\n                //     }\n                // });\n\n                // get all the expenses from new table\n                firebase.db.ref(`loanTable/${this.state.authUser.uid}`).on(\"value\", data => {\n                    if (data.val() !== null) {\n                        this.setState({\n                            loans: data.val()\n                        });\n                    } else {\n                        // get and set expenses in db from old expenses table to new expenseTable\n                        firebase.db.ref(\"loans\").on(\"value\", data => {\n                            if (data.val() !== null) {\n                                const eachExpense = utils.eachExpense(data.val());\n                                const thisUsersLoans = utils.currentUsersExpenses(eachExpense, this.state.authUser);\n\n                                thisUsersLoans.map(elem => {\n                                    db.doCreateLoanTable(\n                                        elem.value.uid,\n                                        elem.value.date,\n                                        elem.value.amount,\n                                        elem.value.loanType,\n                                        elem.value.reason,\n                                        elem.value.person,\n                                        elem.value.day,\n                                        elem.value.status,\n                                        elem.key\n                                    );\n                                });\n\n                                thisUsersLoans.map(elem => {\n                                    firebase.db.ref(`loans/${elem.key}`).remove();\n                                });\n\n                                // need to set empty state once deleting all records in legacy table\n                                // or else it will always be loading\n\n                                this.setState({\n                                    loans: data.val()\n                                });\n                            }\n                        });\n                    }\n                });\n\n                const expensesRef = firebase.db.ref(`expenseTable/${this.state.authUser.uid}`);\n                expensesRef.on(\"child_removed\", data => {\n                    firebase.db.ref(`expenseTable/${this.state.authUser.uid}`).on(\"value\", data => {\n                        if (data) {\n                            this.setState({\n                                expenses: data.val()\n                            });\n                        }\n                    });\n                });\n\n                const loansRef = firebase.db.ref(`loanTable/${this.state.authUser.uid}`);\n                loansRef.on(\"child_removed\", data => {\n                    firebase.db.ref(`loanTable/${this.state.authUser.uid}`).on(\"value\", data => {\n                        if (data) {\n                            this.setState({\n                                loans: data.val()\n                            });\n                        }\n                    });\n                });\n            }\n\n            // return authUser ? this.setState(() => { authUser: authUser}) : this.setState(() => ({authUser: null}))\n        });\n    }\n\n    render() {\n        const bodyStyle = {\n            backgroundColor: this.state.settings\n                ? this.state.settings.mode === \"night\"\n                    ? \"#484842 !important\"\n                    : \"auto\"\n                : \"auto\",\n            height: \"100vh\"\n        };\n\n        var patternconfig = { height: 300, width: 500, cell_size: 35 }; // palette: Trianglify.colorbrewer,\n        var pattern = Trianglify({ ...patternconfig });\n        var pattern2 = Trianglify({ ...patternconfig });\n        var pattern3 = Trianglify({ ...patternconfig });\n        var pattern4 = Trianglify({ ...patternconfig });\n        var pattern5 = Trianglify({ ...patternconfig });\n        var pattern6 = Trianglify({ ...patternconfig });\n        var pattern7 = Trianglify({ ...patternconfig });\n        var pattern8 = Trianglify({ ...patternconfig });\n\n        const cards = {\n            card8: { backgroundImage: `url(${pattern8.png()})` },\n            card7: { backgroundImage: `url(${pattern7.png()})` },\n            card6: { backgroundImage: `url(${pattern6.png()})` },\n            card5: { backgroundImage: `url(${pattern5.png()})` },\n            card4: { backgroundImage: `url(${pattern4.png()})` },\n            card3: { backgroundImage: `url(${pattern3.png()})` },\n            card2: { backgroundImage: `url(${pattern2.png()})` },\n            card1: { backgroundImage: `url(${pattern.png()})` }\n        };\n\n        return (\n            <Router>\n                <div style={bodyStyle}>\n                    <Navigation authUser={this.state.authUser} settings={this.state.settings} />\n                    <Switch>\n                    {/* <Route exact path={routes.LANDING} component={() => <SignInPage />} /> */}\n                    <Route exact path={routes.SIGN_UP} component={() => <SignUpPage />} />\n                    <Route exact path={routes.SIGN_IN} component={() => <SignInPage />} />\n                    <Route exact path={routes.SHOP} component={() => <ShopPage />} />\n\n                    <Route exact path={routes.PASSWORD_FORGET} component={() => <PasswordForgetPage />} />\n                    <Route\n                        exact\n                        path={routes.UPDATE_PASSWORD}\n                        component={() => <UpdatePassword user={this.state.authUser} />}\n                    />\n                    <Route exact path={routes.USER_VERIFICATION} component={() => <UserVerification />} />\n                    <Route\n                        exact\n                        path={routes.HOME}\n                        component={() => (\n                            <HomePage\n                                user={this.state.authUser}\n                                expenses={this.state.expenses}\n                                settings={this.state.settings}\n                                cards={cards}\n                            />\n                        )}\n                    />\n                    <Route\n                        exact\n                        path={routes.MONTH_VIEW}\n                        component={() => (\n                            <MonthViewPage\n                                user={this.state.authUser}\n                                expenses={this.state.expenses}\n                                settings={this.state.settings}\n                                cards={cards}\n                            />\n                        )}\n                    />\n\n                    <Route\n                        exact\n                        path={routes.DAILY_VIEW}\n                        component={() => (\n                            <DailyViewPage\n                                user={this.state.authUser}\n                                expenses={this.state.expenses}\n                                settings={this.state.settings}\n                                cards={cards}\n                            />\n                        )}\n                    />\n\n                    <Route\n                        exact\n                        path={routes.FILTER_VIEW}\n                        component={() => (\n                            <FilterViewPage\n                                user={this.state.authUser}\n                                expenses={this.state.expenses}\n                                settings={this.state.settings}\n                                cards={cards}\n                            />\n                        )}\n                    />\n                    <Route\n                        exact\n                        path={routes.STATISTICS_VIEW}\n                        component={() => (\n                            <StatisticsPage\n                                user={this.state.authUser}\n                                expenses={this.state.expenses}\n                                settings={this.state.settings}\n                                cards={cards}\n                            />\n                        )}\n                    />\n                    <Route\n                        exact\n                        path={routes.LOAN_VIEW}\n                        component={() => (\n                            <LoanPage\n                                user={this.state.authUser}\n                                loans={this.state.loans}\n                                settings={this.state.settings}\n                                cards={cards}\n                            />\n                        )}\n                    />\n\n                    <Route\n                        exact\n                        path={routes.SETTINGS_VIEW}\n                        component={() => (\n                            <SettingsPage user={this.state.authUser} settings={this.state.settings} cards={cards} />\n                        )}\n                    />\n\n                    <Route\n                        exact\n                        path={routes.SAVINGS_VIEW}\n                        component={() => (\n                            <SavingsPage\n                                user={this.state.authUser}\n                                savings={this.state.savings}\n                                settings={this.state.settings}\n                            />\n                        )}\n                    />\n\n                    <Route\n                        component={() => (\n                            <ErrorPage />\n                        )}\n                    />\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}